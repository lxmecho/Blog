---
import { siteConfig } from '../config/site';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FixEncoding from '../components/FixEncoding.astro';

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { 
  title = siteConfig.title,
  description = siteConfig.description,
  image,
} = Astro.props;

const fullTitle = title === siteConfig.title ? title : `${title} | ${siteConfig.title}`;
---

<!DOCTYPE html>
<html lang={siteConfig.language} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{fullTitle}</title>
    <meta name="description" content={description} />
    <meta name="author" content={siteConfig.author.name} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={image} />}
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={fullTitle} />
    <meta property="twitter:description" content={description} />
    {image && <meta property="twitter:image" content={image} />}
    
    <!-- 预加载字体 -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Fira+Code:wght@400;500&display=swap" rel="stylesheet" />
    
    <!-- 主题初始化脚本 -->
    <script>
      // 从localStorage获取主题配置，或使用默认值
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();

      // 设置文档类名以应用主题
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }

      // 存储到localStorage
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', theme);
      }
    </script>
  </head>
  <body class="bg-background-light dark:bg-background-dark text-text-light dark:text-text-dark min-h-screen flex flex-col">
    <FixEncoding />
    <Header />
    <main class="flex-grow">
      <slot />
    </main>
    <Footer />
  </body>
</html> 