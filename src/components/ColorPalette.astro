---
import { siteConfig } from '../config/site';
---

<div class="relative">
  <button id="color-palette-button" class="p-1.5 rounded-full text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800">
    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01" />
    </svg>
  </button>
  
  <!-- 颜色主题下拉面板 -->
  <div id="color-palette-panel" class="hidden absolute right-0 mt-2 w-40 bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden z-50">
    <div class="p-2">
      <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100 mb-2 px-2">主题颜色</h3>
      <div class="space-y-1">
        {siteConfig.appearance.themeColors.map((color) => (
          <button 
            class="color-theme-option flex items-center w-full px-2 py-1.5 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded"
            data-color={color.primaryColor}
            data-name={color.name}
          >
            <span class="w-4 h-4 rounded-full mr-2" style={`background-color: ${color.primaryColor}`}></span>
            <span>{color.name}</span>
          </button>
        ))}
      </div>
    </div>
  </div>
</div>

<script>
  // 确保代码在DOMContentLoaded事件之后执行
  document.addEventListener('DOMContentLoaded', () => {
    // 获取DOM元素
    const colorPaletteButton = document.getElementById('color-palette-button');
    const colorPalettePanel = document.getElementById('color-palette-panel');
    const colorThemeOptions = document.querySelectorAll('.color-theme-option');
    
    // 设置CSS变量函数
    function setThemeColor(colorHex) {
      // 将十六进制颜色转换为RGB值
      const r = parseInt(colorHex.slice(1, 3), 16);
      const g = parseInt(colorHex.slice(3, 5), 16);
      const b = parseInt(colorHex.slice(5, 7), 16);
      
      // 设置CSS变量
      document.documentElement.style.setProperty('--color-primary', colorHex);
      document.documentElement.style.setProperty('--color-primary-rgb', `${r}, ${g}, ${b}`);
      
      // 保存到localStorage
      localStorage.setItem('theme-color', colorHex);
    }
    
    // 面板切换
    if (colorPaletteButton && colorPalettePanel) {
      colorPaletteButton.addEventListener('click', (event) => {
        event.stopPropagation(); // 阻止事件冒泡
        colorPalettePanel.classList.toggle('hidden');
      });
      
      // 点击面板内部不关闭面板
      colorPalettePanel.addEventListener('click', (event) => {
        event.stopPropagation();
      });
    }
    
    // 点击其他区域关闭面板
    document.addEventListener('click', () => {
      if (colorPalettePanel && !colorPalettePanel.classList.contains('hidden')) {
        colorPalettePanel.classList.add('hidden');
      }
    });
    
    // 颜色主题切换
    colorThemeOptions.forEach(option => {
      if (option) {
        option.addEventListener('click', () => {
          const color = option.getAttribute('data-color');
          if (color) {
            setThemeColor(color);
            if (colorPalettePanel) {
              colorPalettePanel.classList.add('hidden');
            }
          }
        });
      }
    });
    
    // 立即应用保存的颜色
    const savedColor = localStorage.getItem('theme-color');
    if (savedColor) {
      setThemeColor(savedColor);
    } else {
      // 获取默认颜色
      const firstColorOption = document.querySelector('.color-theme-option');
      if (firstColorOption) {
        const defaultColor = firstColorOption.getAttribute('data-color');
        if (defaultColor) {
          setThemeColor(defaultColor);
        }
      }
    }
  });
</script>

<style is:global>
  :root {
    --color-primary: #0ea5e9;
    --color-primary-rgb: 14, 165, 233;
  }
  
  /* 覆盖Tailwind的主题颜色 */
  .text-primary-500 {
    color: var(--color-primary) !important;
  }
  
  .bg-primary-500 {
    background-color: var(--color-primary) !important;
  }
  
  .border-primary-500 {
    border-color: var(--color-primary) !important;
  }
  
  .hover\:bg-primary-500:hover {
    background-color: var(--color-primary) !important;
  }
  
  .hover\:text-primary-500:hover {
    color: var(--color-primary) !important;
  }
  
  /* 按钮和交互元素 */
  .ring-primary-500 {
    --tw-ring-color: var(--color-primary) !important;
  }
  
  .focus\:ring-primary-500:focus {
    --tw-ring-color: var(--color-primary) !important;
  }
</style> 